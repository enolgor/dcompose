#!/bin/sh

if [ ! $(whoami) = "root" ]; then
  exec sudo "$0" "$@"
  echo "Error: failed to execute sudo" >&2
  exit 1
fi

SCRIPTDIR="$( cd "$( dirname "$0" )" && pwd )"

RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m'

cd /etc/dcompose

case "$1" in
    list)
    for f in available/docker-compose.*.yml; do
      name=$(basename $f | cut -d . -f 2)
      if [ -f "enabled/docker-compose.$name.yml" ]; then
        printf "${GREEN}[enabled] ${NC} $name\n"
      else
        printf "${RED}[disabled]${NC} $name\n"
      fi
    done
    exit 0
    ;;
    enable)
    if [ "$2" = "--all" ]; then
      for f in available/docker-compose.*.yml; do
        name=$(basename $f | cut -d . -f 2)
        /bin/sh -c "$SCRIPTDIR/dcompose $1 $name"
      done
      exit 0
    fi
    test ! -f "enabled/docker-compose.yml" && test -f "available/docker-compose.yml" && ln -s "../available/docker-compose.yml" "enabled/docker-compose.yml"
    test ! -f "enabled/docker-compose.$2.yml" && test -f "available/docker-compose.$2.yml" && ln -s "../available/docker-compose.$2.yml" "enabled/docker-compose.$2.yml"
    enabled=$?
    if [ -f "on_enable" ] && [ $enabled -eq 0 ]; then
       ./on_enable $2
    fi
    exit 0
    ;;
    disable)
    if [ "$2" = "--all" ]; then
      for f in available/docker-compose.*.yml; do
        name=$(basename $f | cut -d . -f 2)
        /bin/sh -c "$SCRIPTDIR/dcompose $1 $name"
      done
      exit 0
    fi
    test -f "enabled/docker-compose.$2.yml"  && rm "enabled/docker-compose.$2.yml" 2> /dev/null
    disabled=$?
    if [ -f "on_disable" ] && [ $disabled -eq 0 ]; then
       ./on_disable $2
    fi
    exit 0
    ;;
esac

docker-compose -p dcompose -f enabled/docker-compose.yml $(find enabled/docker-compose.*.yml | sed -e 's/^/-f /') "$@"
